Project Overview:
"We Know Better" is a web application for football (soccer) match predictions. It allows users to view upcoming matches, make predictions, and tracks the accuracy of both user (fans) and AI predictions.
Project Structure:
Copywe-know-better/
├── frontend/
│   ├── public/
│   │   ├── index.html
│   │   └── favicon.ico
│   ├── src/
│   │   ├── components/
│   │   │   └── AuthComponent.js
│   │   ├── App.js
│   │   ├── index.js
│   │   ├── index.css
│   │   ├── config.js
│   │   └── api.js
│   ├── package.json
│   ├── tailwind.config.js
│   └── .env
├── backend/
│   ├── routes/
│   │   └── auth.js
│   ├── models/
│   │   └── User.js
│   ├── server.js
│   ├── package.json
│   └── .env
└── README.md
Frontend (React.js):

AuthComponent.js: Handles user authentication (login, register, Google sign-in) with a modal interface.
App.js: Main component that renders the AuthComponent and provides overall layout.
config.js: Contains configuration variables like API URL and Google Client ID.
api.js: Axios instance for making API calls with authentication.
index.css: Contains Tailwind CSS imports and any custom styles.
tailwind.config.js: Configuration file for Tailwind CSS.

Backend (Node.js with Express.js):

server.js: Main entry point for the backend, sets up Express, middleware, and CORS.
routes/auth.js: Handles authentication routes (register, login, Google auth).
models/User.js: Mongoose schema for the User model, including country field.

Key Features Implemented:

User Registration: Users can register with a username, email, password, and country.
User Login: Registered users can log in with their credentials.
Google Sign-In: Users can sign in using their Google accounts.
JWT Authentication: JSON Web Tokens are used for maintaining user sessions.
CORS Configuration: Allows the frontend to communicate with the backend securely.
Country Selection: Uses react-select-country-list for a comprehensive list of countries with flags.
Modal Interface: Sign-in/Register form appears in a modal for better user experience.
Responsive Design: Uses Tailwind CSS for a mobile-friendly, modern UI.

Database:

MongoDB: Used for storing user information, including country data.

Deployment:

Frontend: Deployed on Vercel
Backend: Deployed on Render

Authentication Flow:

User clicks "Sign In" button, opening a modal.
User can choose to log in, register, or use Google Sign-In.
For regular login/register, credentials are sent to the backend for verification/creation.
For Google Sign-In, OAuth flow is initiated, and user info is sent to the backend.
Upon successful authentication, a JWT is stored in localStorage for session management.

Styling:

Tailwind CSS is used for styling, providing a clean and responsive design.
The authentication modal is centered on the screen with a clean white background.
Buttons are styled with appropriate colors (blue for primary actions, red for Google Sign-In).